import {useState} from 'react';
import {Modal, ModalBody, ModalContent, ModalHeader, ModalFooter, Button} from "@heroui/react";
import Image from 'next/image';

export default function ImageUploadModal() {
    const [isOpen, setIsOpen] = useState(false);
    const [imageSrc, setImageSrc] = useState('/images/profile.png');
    const [newImage, setNewImage] = useState(null);

    const handleImageChange = (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = () => setNewImage(reader.result);
            reader.readAsDataURL(file);
        }
    };

    const handleDrop = (event) => {
        event.preventDefault();
        const file = event.dataTransfer.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = () => setNewImage(reader.result);
            reader.readAsDataURL(file);
        }
    };

    const handleSave = () => {
        if (newImage) {
            setImageSrc(newImage);
            setNewImage(null);
        }
        setIsOpen(false);
    };

    return (
        <>
            {/* Trigger Image */}
            <div
                className="centerOfParent rounded-full overflow-hidden sm:w-28 w-16 sm:h-28 h-16 cursor-pointer"
                onClick={() => setIsOpen(true)}
            >
                <Image src={imageSrc} alt="profile" width={100} height={100} className="w-full h-full"/>
            </div>

            {/* Modal */}
            <Modal isOpen={isOpen} onOpenChange={setIsOpen} size="md">
                <ModalContent>
                    <ModalHeader className="text-center">Upload Image</ModalHeader>
                    <ModalBody>
                        <div
                            className="relative flex justify-center items-center w-full h-60 border-2 border-dashed rounded-lg cursor-pointer"
                            onClick={() => document.getElementById('fileInput').click()}
                            onDragOver={(e) => e.preventDefault()}
                            onDrop={handleDrop}
                        >
                            <Image
                                src={newImage || imageSrc}
                                alt="Uploaded Image"
                                width={200}
                                height={200}
                                className="rounded-lg max-h-full object-cover"
                                onClick={handleImageChange}
                            />
                            <input id="fileInput" type="file" accept="image/*" hidden onChange={handleImageChange}/>
                            <p className="mt-2 text-sm text-gray-600">
                                Drag and drop an image here or click to select
                            </p>
                        </div>
                    </ModalBody>
                    <ModalFooter>
                        <Button variant="ghost" onPress={() => setIsOpen(false)}>Cancel</Button>
                        <Button color="primary" onPress={handleSave}>Submit</Button>
                    </ModalFooter>
                </ModalContent>
            </Modal>
        </>
    );
}
